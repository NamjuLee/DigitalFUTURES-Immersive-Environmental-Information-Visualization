using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class MainUIEvent : MonoBehaviour
{
    float t = 0.0f;
    GameObject go;
    Text text;

    // we want to collect spheres to print the number of them generated by the Button event.
    List<GameObject> sphereList = new List<GameObject>();
    void Start() {
        // UI could be considered as a gameobject, and we could get Button component by .GetComponent function.
        // select the existing Button 
        Button btn1 = GameObject.Find("BtnReset1").GetComponent<Button>();
        // bind the callback function
        btn1.onClick.AddListener(BtnReset1);
  
        Button btn2 = GameObject.Find("BtnReset2").GetComponent<Button>();
        btn2.onClick.AddListener(BtnReset2);

        // select the existing text component of the gameobject to display the number of spheres. 
        Text text = GameObject.Find("TextCount").GetComponent<Text>();
        text.text = "Num of Spheres: 0";
        this.text = text;

        this.go = GameObject.CreatePrimitive(PrimitiveType.Sphere);
        this.go.transform.position = new Vector3(0, 1.5f, 0);
        this.go.transform.localScale = new Vector3(7, 7, 7);
    }
    void Update(){
        // update the animation for the position of the emitter
        this.go.transform.position = new Vector3(this.go.transform.position.x + Mathf.Sin(t) * 0.1f, this.go.transform.position.y, this.go.transform.position.z);
        t+= 0.01f;
    }
    // when you click btn1, then it will execute the function below.
    void BtnReset1() {
        // create a sphere
        GameObject sphere =  GameObject.CreatePrimitive(PrimitiveType.Sphere);
        // randomize scale between 2.3 and 5.2
        float scale = Random.Range(2.3f, 5.2f);
        // update the position and localScale of the sphere
        sphere.transform.position = new Vector3(go.transform.position.x, go.transform.position.y + 10, go.transform.position.z );
        sphere.transform.localScale = new Vector3(scale, scale, scale);
        // dynamically add the Rigidbody on the sphere
        sphere.AddComponent<Rigidbody>();
        // get the Rigidbody we just attached
        Rigidbody rigidbody = sphere.GetComponent<Rigidbody>();
        rigidbody.mass = .9f;
        rigidbody.AddForceAtPosition(Vector3.up * 1000f, sphere.transform.position);

        // store the sphere to the array, computing how many spheres we generated later
        sphereList.Add(sphere);

        this.UpdateUIText();
    }
    // when you click btn2, then it will execute the function below.
    void BtnReset2(){
        foreach(GameObject g in this.sphereList) GameObject.Destroy(g);
        sphereList = new List<GameObject>();

        this.UpdateUIText();
    }
    // this function is for updating the text of the TextCount UI. 
    void UpdateUIText(){
        this.text.text = "Num of Spheres: " + sphereList.Count;
        int num = 14 + sphereList.Count;

        // if the number of spheres are bigger than 30, we want to stick to 30.
        this.text.fontSize = num > 30 ? 30 : num;
    }
}
